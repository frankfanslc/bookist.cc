@page "/admin"
@page "/admin/books"
@inject NavigationManager NavManager
@inject BookService BookService

<PageTitle>书箱管理</PageTitle>

<Card>
    <div style="margin-bottom:15px;">
        <Input Placeholder="书名/作者" @bind-Value="@keyword" Style="width:240px" />
        <Button Type="@ButtonType.Primary">搜索</Button>
        <Button Style="float:right" Icon="@IconType.Outline.Plus" OnClick=@(_=>OpenEditor())>添加</Button>
    </div>
    <Table Bordered TItem=Book DataSource=pageData.List Total=pageData.Total OnPageIndexChange=OnPageIndexChange>
        <Column @bind-Field="@context.Cover" Align="ColumnAlign.Center">
            <div style="margin:-16px;"><img src="@context.Cover" alt="" style="height:40px" /></div>
        </Column>
        <Column @bind-Field="@context.Title">
        </Column>
        <Column @bind-Field="@context.Author">
        </Column>
        <Column @bind-Field="@context.PubDate" Align="ColumnAlign.Center">
            @context.PubDate.ToString("yyyy-MM")
        </Column>
        <Column @bind-Field="@context.Format" Align="ColumnAlign.Center">
        </Column>
        <Column @bind-Field="@context.FetchUrl" Align="ColumnAlign.Center">
            <a href="@context.FetchUrl" target="_blank">打开</a>
        </Column>
        <Column @bind-Field="@context.FetchCode" Align="ColumnAlign.Center">
        </Column>

        <ActionColumn Title="操作" Align="ColumnAlign.Center">
            <Button Type="@ButtonType.Primary" Size="small">编辑</Button>
            <Button Danger Size="small">删除</Button>
        </ActionColumn>
    </Table>
</Card>

<div class="edit-drawer">
    <Drawer Closable="true" Width="720" Visible="@editorVisible" Title="@(currentId==0?"添加书籍":"编辑书籍")" OnClose="CloseEditor">
        <BookEditForm OnFinish="OnEditFinish" OnCancel="CloseEditor" />
    </Drawer>
</div>

@code {
    const int PAGE_SIZE = 8;

    string keyword;

    int currentId = 0;
    bool editorVisible = false;

    PagedResult<Book> pageData = new();

    protected override async Task OnInitializedAsync()
    {
        await QueryDataAsync();
    }

    async Task QueryDataAsync(int page = 1)
    {
        pageData = await BookService.GetPageAsync(page, PAGE_SIZE);
    }

    async Task OnPageIndexChange(PaginationEventArgs args)
    {
        await QueryDataAsync(args.Page);
    }

    void OpenEditor(int id = 0)
    {
        currentId = id;
        editorVisible = true;
    }

    void CloseEditor()
    {
        editorVisible = false;
    }

    async Task OnEditFinish()
    {
        editorVisible = false;
        await QueryDataAsync(pageData.Page);
    }
}